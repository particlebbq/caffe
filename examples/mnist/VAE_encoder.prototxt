name: "VAE_encoder_net"

layer{
  name: "input" 
  type: "Input"
  top: "X"
}

layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "X"
  propagate_down: true
  top: "fc1"
  param {
   lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 784
    weight_filler {
      type: "gaussian"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
 name: "bn_fc1"
  type: "BatchNorm"
  bottom: "fc1"
  top: "fc1"
  batch_norm_param {
    use_global_stats: false
  }
}

layer {
  name: "scale_fc1"
  type: "Scale"
  bottom: "fc1"
  top: "fc1"
  scale_param {
    bias_term: true
  }
}


layer{
  name: "fc1_relu"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
  relu_param{
    negative_slope: 0.01
  }
}


layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  propagate_down: true
  top: "fc2"
  param {
   lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 784
    weight_filler {
      type: "gaussian"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer{
  name: "fc2_relu"
  type: "ReLU"
  bottom: "fc2"
  top: "fc2"
  relu_param{
    negative_slope: 0.01
  }
}

layer {
  name: "mu"
  type: "InnerProduct"
  bottom: "fc1"
  propagate_down: true
  top: "mu"
  param {
   lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.1
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "sigma"
  type: "InnerProduct"
  bottom: "fc1"
  propagate_down: true
  top: "sigma"
  param {
   lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 1
    decay_mult: 1
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "gaussian"
      std: 0.03
    }
    bias_filler {
      type: "constant"
      value: -3
    }
  }
}

layer{
  name: "sigma_relu"
  type: "Exp"
  bottom: "sigma"
  top: "sigma"
}

layer{
  name: "loss"
  type: "GaussianLoss"
  bottom: "mu"
  bottom: "sigma"
  top: "loss"
  clip_param{
    cliplimit: 0.01
  }
}


layer{
  name: "sample"
  type: "GaussianSample"
  bottom: "mu"
  bottom: "sigma"
  top: "sample"
  clip_param{
    cliplimit: 0.01
  }
}

